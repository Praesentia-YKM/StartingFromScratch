<백준 알고리즘 퇴사.java>
import java.io.*;
import java.util.*;

public class Main {
	static int t[];
	static int p[];
	static int n;
	static int ans = Integer.MIN_VALUE;
	
	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		n = Integer.parseInt(br.readLine());
		t = new int[n];
		p = new int[n];
		
		for(int i=0; i<n; i++) {
			StringTokenizer st  = new StringTokenizer(br.readLine());
			
			t[i] = Integer.parseInt(st.nextToken());
			p[i] = Integer.parseInt(st.nextToken());
		}
		go(0,0);
		
		System.out.println(ans);
		
	}

	public static void go(int index, int sum) {
		//1. 정답을 찾은 경우
		//해당 날이 퇴사하는 날 일때 최대 수익을 계산한다.
		if(index == n) {
			if(ans < sum) ans = sum;
			return;
		}
		
		//2. 불가능한 경우
		//퇴사하는 날을 넘었을 경우.
		if(index > n) return;
		
		//3. 다음 경우 
		// 일을 하게 되면 현재 일수에 걸리는 기간과 비용을 추가해 준다.
		go(index + t[index], sum+p[index]);
		
		//일을 하지 않게 되면 하루가 지나가고 비용은 그대로 이다.
		go(index+1, sum);
			
	}
}

