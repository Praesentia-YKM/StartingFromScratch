오늘은 코딩 공부보다는 나의 앞으로의 방향성과 목표에 대해 더 다지는 시간을 가졌다.
그리고 산업기사 자격증을 따두면 좋겠다는 생각이 새로 들었다. 기존에는 자격증에 대해 불필요하다고 생각했었는데 아예 없는거보단 기본적인 것은 갖추는게 맞다는 생각이 들었다.

<나의 방학목표>


<앞으로의 방향성>


<내가 코딩을 잘하고 싶은 이유>


<내가 더 나아가 최고를 바라보면서 성장해야하는 이유>




<알고리즘 문제 하나 풀었다!> 
Q: 숫자로 이루어진 문자열 t와 p가 주어질 때, t에서 p와 길이가 같은 부분문자열 중에서, 이 부분문자열이 나타내는 수가 p가 나타내는 수보다 작거나 같은 것이 나오는 횟수를 return하는 함수 solution을 완성하세요.

예를 들어, t="3141592"이고 p="271" 인 경우, t의 길이가 3인 부분 문자열은 314, 141, 415, 159, 592입니다. 이 문자열이 나타내는 수 중 271보다 작거나 같은 수는 141, 159 2개 입니다.

A: 
public class SmallSubstring {
	public int solution(String t, String p) {
		int len = p.length();
		long num = Long.parseLong(p);
		int result = 0;

		for (int i = 0; i < t.length() - len + 1; i++) {
			long diff = Long.parseLong(t.substring(i, i + len));
			if (diff <= num) result++;
		}
		return result;
	}

	public static void main(String[] args) {
		SmallSubstring smallSubstring = new SmallSubstring();
		System.out.println(smallSubstring.solution("3141592", "271"));  // 2
		System.out.println(smallSubstring.solution("500220839878", "7"));  // 8
		System.out.println(smallSubstring.solution("10203", "15"));  // 3
	}
}
