<아는 것도 다시보자!>
접근 제한자🖐
접근 제한자(Access Modifier)는 말 그대로 접근을 제한하기 위해 사용됩니다. 여기서 접근이란 클래스 및 인터페이스 그리고 이들이 가지고 있는 멤버의 접근을 말합니다. 
어떤 경우에는 클래스와 인터페이스를 다른 패키지에서 사용하지 못하도록 막을 필요가 있습니다. 그리고 객체 생성을 막기 위해 생성자를 호출하지 못하게 하거나 필드나 메소드를 사용하지 못하도록 막아야 되는 경우도 있습니다. 
이때 접근 제한자를 사용할 수 있습니다. 
접근 제한자는 public, protected, private와 같이 세 가지 종류가 있습니다.

public 접근 제한자: 단어 뜻 그대로 외부 클래스가 자유롭게 사용할 수 있도록 합니다.
protected 접근 제한자: 같은 패키지 또는 자식 클래스에서 사용할 수 있도록 합니다.
private 접근 제한자: 단어 뜻 그대로 개인적인 것이라 외부에서 사용될 수 없도록 합니다.

위 세 가지 접근 제한자가 적용되지 않으면 default 접근 제한을 가집니다.
default 접근 제한: 같은 패키지에 소속된 클래스에서만 사용할 수 있도록 합니다


<MVC viewResolver>

뷰 리졸버
MyView view = viewResolver(viewName)
컨트롤러가 반환한 논리 뷰 이름을 실제 물리 뷰 경로로 변경한다. 그리고 실제 물리 경로가 있는 MyView
객체를 반환한다.
논리 뷰 이름: members
물리 뷰 경로: /WEB-INF/views/members.jsp
view.render(mv.getModel(), request, response)
뷰 객체를 통해서 HTML 화면을 렌더링 한다.
뷰 객체의 render() 는 모델 정보도 함께 받는다.
JSP는 request.getAttribute() 로 데이터를 조회하기 때문에, 모델의 데이터를 꺼내서
request.setAttribute() 로 담아둔다.
JSP로 포워드 해서 JSP를 렌더링 한다.

< HeidiSQL > 
HeidiSQL을 사용하는 이유
HeidiSQL을 통해 세션을 만들고 로컬이나 원격 서버에 접속하고, 접속된 데이터 서버 내의 데이터베이스를 관리할 수 있습니다. 
GUI 환경을 제공하기 때문에 테이블을 시각화해서 보기 편하고, 툴 안에서 SQL문을 사용하지 않더라도 마우스를 통해 많은 작업을 수행할 수 있습니다.
HeidiSQL 하나만 있어도 MariaDB, MySQL, Microsoft SQL, PostgreSQL, SQLite 등의 데이터베이스 시스템을 실행하는 컴퓨터에 접속해서 데이터 구조를 보고 편집할 수 있습니다. 
물론 각 DBMS에서도 GUI 환경을 제공하는 도구를 사용할 수 있습니다. 다만 HeidiSQL은 하나의 툴로도 위에서 언급한 RDBMS를 모두 관리할 수 있습니다. 
하나의 창에서 여러 서버에 연결도 가능합니다.
오픈 소스로 제공되기 때문에 무료로 사용할 수 있는 장점이 있습니다. 전 세계적으로 가장 널리 사용되는 데이터베이스 관리 도구입니다.
