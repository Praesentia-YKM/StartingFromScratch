<프로그래머스 삼총사>

class Solution {
    public int solution(int[] number) {
        int answer = 0;
		
		int start = 0;
		while(start <= number.length-3 ) {
		
		for(int i = start+1; i< number.length; i++) {
			for( int j = i+1; j< number.length; j++) {
				if(number[start] + number[i] + number[j] == 0) {
					answer++;
				}
				//System.out.println(number[start] + " : " + number[i] + " : " + number[j]);
			}
		}
		
		start ++;
		}
        
        return answer;
    }
}

<나머지가 1이 되는 수 찾기>

class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for (int i=2; i<n; i++){
            if(n%i == 1){
                answer = i;
                break;
            }
        }
        return answer;
    }
}

<숫자짝꿍>
import java.util.*;

class Solution {
    public String solution(String X, String Y) {
        
        int[] cntX = new int[10];
        int[] cntY = new int[10];
        
        for (String tmpX : X.split("")) cntX[Integer.parseInt(tmpX)]++;
        for (String tmpY : Y.split("")) cntY[Integer.parseInt(tmpY)]++;
        
        StringBuilder sb = new StringBuilder();
        
        for (int i = 9; i >= 0; i--){
            while(cntX[i] > 0 && cntY[i] > 0){
                sb.append(i);
                cntX[i]--;
                cntY[i]--;
            }
        }
        
        String answer = "";
        
        if ("".equals(sb.toString())) {
            answer = "-1";
        } else if ("0".equals(sb.toString().substring(0,1))) {
            answer = "0";
        } else {
            answer = sb.toString();
        }

        return answer;
    }
}
